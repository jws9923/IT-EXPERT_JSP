A	소스 설치 안내
A.1	필요사항
A.2	공통 설치
A.2.1	컨텍스트 추가와 DBCP 설정법

A.3	ant 사용
A.3.1	ant의 설치
A.3.2	톰캣과 ant의 연결 (Tomcat 4.1.24 이상 기준)
A.3.3	소스의 설치 (Tomcat 4.1.24 이상 기준)

A.4	war파일 사용
A.4.1	war파일 설치

A.5	직접 컴파일 배치
A.5.1	디렉토리 만들기
A.5.2	파일 복사
A.5.3	java 소스 복사와 컴파일

A	소스 설치 안내
A.1	필요사항
세 가지 방법으로 소스를 실행해 볼 수 있다.

일단 공통적으로 j2sdk1.4와 톰캣4.1.24이상 버전을 설치해야 된다. 편의상 j2sdk가
설치된 디렉토리를 <JAVA_HOME>으로 톰캣4.1.X가 설치된 디렉토리를
<CATALINA_HOME>으로 표시하겠다.

공통 설정 부분은 세 가지 방법 모두 필요한 부분이다. 주로 환경변수
설정이나<CATALINA_HOME>/conf/server.xml 등을 변경해서 톰캣을 재시동해야
변경사항이 적용되는 경우이다.

가장 권장하는 방식은 ant를 이용하는 방식이고, 편한 방식은 war파일을 이용하는
것이다. 그리고, 가장 까다롭고, 노가다성의 방식이 직접 컴파일하고 배치하는
방법이다.

각 장의 소스는 chap01.zip, chap02.zip 등으로 압축이 되어 있고, 압축을 풀면 필요한
jar파일들, 소스들, build.xml, 안내파일들이 디렉토리별로 구분되어 있다.

※주의:
설명 중 장의 특성에 따라서 공통라이브러리가 없거나 jdbc정보를 변경할 필요가
없을 수도 있다. 이런 경우 바로 다음 단계로 넘어가도 된다.

A.2	공통 설치

A.2.1	컨텍스트 추가와 DBCP 설정법
chap05.zip 압축을 풀고 conf 디렉토리에 있는 Context.xml파일을 편집기로 열어서
jdbc정보를 수정한 다음 전체를 복사한다. 톰캣의 server.xml파일을 열어서 다음
부분 뒤에 복사한 부분을 붙여넣는다.
...
        <!-- Tomcat Root Context -->
        <!--
                  <Context path="" docBase="ROOT" debug="0"/>
        -->
<!-- Tomcat chap05 Context -->
<Context path="/chap05" docBase="chap05" debug="0" reloadable="true">
    <Logger className="org.apache.catalina.logger.FileLogger"...

ant를 사용하지 않으면 A.4나 A.5로 바로 넘어간다.



A.3	ant 사용

A.3.1	ant의 설치

1. CD의 ant 디렉토리에 있는 apache-ant-1.5.2-bin.zip파일을 적당한 위치에 압축을
풀어놓는다. 예를 들면 c:/java/ant 디렉토리 같은 곳에 모든 서브디렉토리와
파일을 풀어 놓는다.

2. 바탕화면의 내컴퓨터 아이콘을 오른마우스버튼으로 클릭해서 등록정보(R)...창을
연다.

3. 고급 탭을 클릭해서 환경변수(E)... 버튼을 클릭한다.

4. 시스템 변수(S) 아래에 새로 만들기(W)... 버튼을 클릭해서 창이 뜨면,
          변수 이름(N): ANT_HOME
          변수 값(V): c:\java\ant
로 ant가 설치된 디렉토리 경로를 ANT_HOME 환경변수에 넣어준다.

5. 시스템 변수(S)에서 Path 값에 ant 실행파일 경로를 추가한다.
          변수 이름(N): Path
          변수 값(V): 기존 값에 ;%ANT_HOME%\bin 추가

6. 확인버튼으로 창을 모두 닫는다.

7. 시작>실행(R)... 를 클릭해서 cmd를 입력하고 확인 버튼을 클릭한다.

8. 명령프롬프트 창이 뜨면 ant -version을 입력해서
        C:\java>ant -version
        Apache Ant version 1.5.2 compiled on February 28 2003
위와 같은 메시지가 나오면 ant가 잘 설치된 것이다.


A.3.2	톰캣과 ant의 연결 (Tomcat 4.1.24 이상 기준)

1. Tomcat의 /server/lib 디렉토리에 있는 catalina-ant.jar파일을 ant가 설치된 곳의
lib 디렉토리에 복사한다.

2. Tomcat의 /conf/tomcat-users.xml파일의 내용을 열어서 설치시 관리자 아이디와
비밀번호를 확인하고, 이 아이디에 "manager" role이 주어졌는지 확인한다.
예) id와 비밀번호가 각각 hsboy와 hsboy일 경우
/conf/tomcat-users.xm 의 내용에서 다음 줄이 있는지 확인한다.

<?xml version='1.0' encoding='utf-8'?>
<tomcat-users>
  <role rolename="manager"/>
  <role rolename="admin"/>
  <user username="hsboy" password="hsboy" roles="admin,manager"/>
</tomcat-users>

만일 설치시 id와 비밀번호 입력과정을 넘겼을 경우 위 내용을 추가한다.


A.3.3	소스의 설치 (Tomcat 4.1.24 이상 기준)

1. 작업디렉토리(예: c:/cvs ) 에 zip파일을 풀어 놓는다.
예) c:/cvs/chap05

2. build.properties파일을 열어서 톰캣의 경로와 manager.username과
manager.password값을 /conf/tomcat-users.xml파일에 있는 manager role을 갖고 있는
id와 비밀번호로 수정한다.
예) build.properties
catalina.home=c:/java/Tomcat4.1
#포트가 있을 경우 http://localhost:8080/manager
manager.url=http://localhost/manager
manager.username=hsboy
manager.password=hsboy

3. build.xml파일을 열어서 다음 프로퍼티 값을 자신의 환경에 맞게 수정한다.
예) build.xml 일부
<property name="app.name"      value="chap05"/>   <!-- 컨텍스트 이름 -->
<property name="build.home"    value="${catalina.home}/webapps/${app.name}"/>

build.properties와 build.xml에 겹치는 property가 있는 경우 build.propeties에
지정된 값이 우선순위를 갖는다.

4. 저장하고 명령프롬프트 창을 띄워서 웹 어플리케이션 작업디렉토리로 이동한다.
    cd c:/cvs/chap05

5. build.xml과 build.properties파일을 확인하고, 톰캣을 운영중인지 확인한다.
톰캣이 멈춰있다면 톰캣을 가동한다.

6. ant reload
웹 어플리케이션이 컴파일되면서 새롭게 변경된 파일을 refresh시켜준다.
manager 웹 어플리케이션을 통해 reload해준다.

7. 브라우저를 열어서 접속을 시도해본다.
예) 포트가 80이면 http://localhost/chap05

8. app.name 프로퍼티(예;chap05)에 지정된 값으로 <CATALINA_HOME>/webapps/ 아래
디렉토리가 생성된다. 이 디렉토리가 컨텍스트 루트이다.
예) c:/java/Tomcat4.1/webapps/chap05

9. 소스의 변경 작업은 압축을 푼 곳에서 하고, ant reload로 적용시킨다.




A.4	war파일 사용

A.4.1	war파일 설치
chap05.zip 압축을 풀고 dist디렉토리에 있는 war파일(예; chap05.war)을
<CATALINA_HOME>/webapps디렉토리에 복사한다.
자동으로 압축이 풀리지만 혹시 안 풀릴 경우는

mkdir chap05
cd chap05
jar xvf ../chap05.war

로 디렉토리를 만들어서 압축을 풀고, 톰캣을 재시동한다.

브라우저를 열어서 접속을 시도해본다.
예) 포트가 80이면 http://localhost/chap05




A.5	직접 컴파일 배치

A.5.1	디렉토리 만들기
컨텍스트 루트디렉토리와 웹 어플리케이션에 필요한 디렉토리를 생성한다.
예를 들면 다음과 같다. WEB-INF 는 모두 대문자이다.

C:\>c:
C:\>cd \java\Tomcat4.1
C:\java\Tomcat4.1>cd webapps
C:\java\Tomcat4.1\webapps>mkdir chap05
C:\java\Tomcat4.1\webapps>cd chap05
C:\java\Tomcat4.1\webapps\chap05>mkdir WEB-INF
C:\java\Tomcat4.1\webapps\chap05>cd WEB-INF
C:\java\Tomcat4.1\webapps\chap05\WEB-INF>mkdir classes
C:\java\Tomcat4.1\webapps\chap05\WEB-INF>mkdir lib

A.5.2	파일 복사
chap05.zip 압축을 풀고, web 디렉토리 아래 있는 내용을 공통 설치의 path속성에
정한 컨텍스트 루트로 복사한다.
예) c:/java/Tomcat4.1/webapps/chap05

A.5.3	java 소스 복사와 컴파일
src디렉토리를 모두 컨텍스트 루트의 /WEB-INF 디렉토리로 복사한다. 다음 예제처럼
디렉토리를 이동한 후에 compile.bat를 실행한다.
C:\java\Tomcat4.1\webapps\chap05\WEB-INF>cd src
C:\java\Tomcat4.1\webapps\chap05\WEB-INF\src>compile

톰캣을 재시동하고 브라우저를 열어서 접속을 시도해본다.
예) 포트가 80이면 http://localhost/chap05

